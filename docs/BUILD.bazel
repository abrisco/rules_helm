load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("@io_bazel_stardoc//stardoc:stardoc.bzl", "stardoc")
load("@rules_rust_mdbook//:defs.bzl", "mdbook", "mdbook_server")

bzl_library(
    name = "bzl_lib",
    srcs = [
        "//:bzl_srcs",
        "@bazel_tools//tools:bzl_srcs",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//3rdparty/bazel-lib:bzl_lib",
    ],
)

stardoc(
    name = "rules",
    out = "src/rules.md",
    input = "//helm:defs.bzl",
    table_of_contents_template = "@io_bazel_stardoc//stardoc:templates/markdown_tables/table_of_contents.vm",
    # TODO: https://github.com/bazelbuild/stardoc/issues/110
    target_compatible_with = select({
        "@platforms//os:windows": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [":bzl_lib"],
)

mdbook(
    name = "book",
    srcs = glob(["src/**/*.md"]) + [
        ":rules",
    ],
    book = "book.toml",
)

alias(
    name = "docs",
    actual = ":book",
)

mdbook_server(
    name = "server",
    book = ":book",
)

sh_binary(
    name = "publish_book",
    srcs = ["publish_book.sh"],
    data = [":book"],
    env = {"BOOK_DIR": "$(rootpath :book)"},
)

name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

defaults:
  run:
    shell: bash

env:
  BAZEL_STARTUP_FLAGS: --bazelrc=${{ github.workspace }}/.github/github.bazelrc

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-11
          - os: ubuntu-20.04
          # TODO: https://github.com/abrisco/rules_helm/issues/1
          # - os: windows-2019
    steps:
      # Checkout the code
      - uses: actions/checkout@v2

      # Caches and restores the Bazel outputs.
      - name: Retain Bazel cache (linux)
        uses: actions/cache@v2
        env:
          cache-name: bazel-cache
        with:
          path: |
            ~/.cache/bazelisk
            ~/.cache/bazel
          key: ${{ runner.os }}-${{ env.cache-name }}
        if: startswith(runner.os, 'Linux')
      - name: Retain Bazel cache (MacOS)
        uses: actions/cache@v2
        env:
          cache-name: bazel-cache
        with:
          path: |
            ~/.cache/bazelisk
            /private/var/tmp/_bazel_runner
          key: ${{ runner.os }}-${{ env.cache-name }}
        if: startswith(runner.os, 'MacOS')
      - name: Retain Bazel cache (Windows)
        uses: actions/cache@v2
        env:
          cache-name: bazel-cache
        with:
          path: |
            ~/.cache/bazelisk
            C:/bzl
          key: ${{ runner.os }}-${{ env.cache-name }}
        if: startswith(runner.os, 'Windows')

      - name: Setup Bazelrc
        run: |
          echo "startup --output_user_root=C:/bzl" > ./user.bazelrc
        if: startswith(runner.os, 'Windows')

      # Build and Test the code
      - name: Test
        run: |
          if [[ "${RUNNER_OS}" == "Windows" ]]; then
            bazel ${BAZEL_STARTUP_FLAGS[@]} test ///...
          else
            bazel ${BAZEL_STARTUP_FLAGS[@]} test //...
          fi

  ci-aspects:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-11
          - os: ubuntu-20.04
          # TODO: https://github.com/abrisco/rules_helm/issues/1
          # - os: windows-2019
    steps:
      # Checkout the code
      - uses: actions/checkout@v2

      # Caches and restores the Bazel outputs.
      - name: Retain Bazel cache (linux)
        uses: actions/cache@v2
        env:
          cache-name: bazel-cache
        with:
          path: |
            ~/.cache/bazelisk
            ~/.cache/bazel
          key: ${{ runner.os }}-${{ env.cache-name }}
        if: startswith(runner.os, 'Linux')
      - name: Retain Bazel cache (MacOS)
        uses: actions/cache@v2
        env:
          cache-name: bazel-cache
        with:
          path: |
            ~/.cache/bazelisk
            /private/var/tmp/_bazel_runner
          key: ${{ runner.os }}-${{ env.cache-name }}
        if: startswith(runner.os, 'MacOS')
      - name: Retain Bazel cache (Windows)
        uses: actions/cache@v2
        env:
          cache-name: bazel-cache
        with:
          path: |
            ~/.cache/bazelisk
            C:/bzl
          key: ${{ runner.os }}-${{ env.cache-name }}
        if: startswith(runner.os, 'Windows')

      - name: Setup Bazelrc
        run: |
          if [[ "${RUNNER_OS}" == "Windows" ]]; then
            echo "startup --output_user_root=C:/bzl" > ./user.bazelrc
          fi
          echo "common --config=strict" >> ./user.bazelrc

      # Build and Test the code
      - name: Test
        run: |
          if [[ "${RUNNER_OS}" == "Windows" ]]; then
            bazel ${BAZEL_STARTUP_FLAGS[@]} test ///...
          else
            bazel ${BAZEL_STARTUP_FLAGS[@]} test //...
          fi

  ci-buildifier:
    runs-on: ubuntu-20.04
    steps:
      # Checkout the code
      - uses: actions/checkout@v2
      - name: Download Buildifier
        run: |
          wget "https://github.com/bazelbuild/buildtools/releases/download/v6.3.3/buildifier-linux-amd64" -O buildifier
          chmod +x buildifier
      - name: Buildifier
        run: ./buildifier -lint=warn -mode=check -warnings=all -r ${{ github.workspace }}

  ci-gofmt:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: Jerome1337/gofmt-action@v1.0.5
        with:
          gofmt-flags: -e -d
